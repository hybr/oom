-- =================================================
-- 1. Entity Definition
-- =================================================
CREATE TABLE entity_definition (
    id TEXT PRIMARY KEY,                     -- UUID
    code TEXT UNIQUE NOT NULL,               -- e.g., "INVOICE", "EMPLOYEE"
    name TEXT NOT NULL,                      -- Human-readable name
    description TEXT,                        -- Used as help/hint
    domain TEXT,                             -- e.g., "HR", "FINANCE", "CRM"
    table_name TEXT,                         -- Physical table name (optional)
    scope TEXT DEFAULT 'common',             -- "common", "person", "organization"
    is_active INTEGER DEFAULT 1,             -- 0=false, 1=true
    created_at TEXT DEFAULT (datetime('now')),
    updated_at TEXT DEFAULT (datetime('now'))
);

-- =================================================
-- 2. Entity Attribute
-- =================================================
CREATE TABLE entity_attribute (
    id TEXT PRIMARY KEY,
    entity_id TEXT NOT NULL,
    code TEXT NOT NULL,                       -- e.g., "invoice_number"
    name TEXT NOT NULL,                       -- Label
    description TEXT,                         -- Help/Hint text
    data_type TEXT NOT NULL,                  -- Database storage type: text, integer, real, date, boolean, json
    html_field_type TEXT,                      -- Input element type: input, textarea, select, checkbox
    html_field_subtype TEXT,                   -- Input subtype: text, number, date, color, etc.
    html_field_step TEXT,                      -- Step for number/date fields
    prefix TEXT,                               -- Prefix for input field
    suffix TEXT,                               -- Suffix for input field
    is_required INTEGER DEFAULT 0,
    is_unique INTEGER DEFAULT 0,
    is_system INTEGER DEFAULT 0,              -- System-managed field
    default_value TEXT,
    min_value TEXT,
    max_value TEXT,
    min_length INTEGER,
    max_length INTEGER,
    pattern TEXT,                              -- Regex validation
    allow_multiple INTEGER DEFAULT 0,          -- Multi-select / multi-value support
    options_type TEXT,                         -- Static/Dynamic options type
    options TEXT,                              -- Options definition
    enum_values TEXT,                          -- JSON array or CSV
    validation_regex TEXT,
    display_order INTEGER,
    created_at TEXT DEFAULT (datetime('now')),
    updated_at TEXT DEFAULT (datetime('now')),
    UNIQUE(entity_id, code),
    FOREIGN KEY(entity_id) REFERENCES entity_definition(id) ON DELETE CASCADE
);

-- =================================================
-- 3. Entity Function
-- =================================================
CREATE TABLE entity_function (
    id TEXT PRIMARY KEY,
    entity_id TEXT NOT NULL,
    function_code TEXT NOT NULL,             -- e.g., "approve_invoice"
    function_name TEXT,                      -- Human-readable label
    function_description TEXT,
    parameters TEXT,                         -- JSON string: [{"name":"param1","type":"text"}]
    return_type TEXT,                        -- "void", "boolean", "json", etc.
    is_system INTEGER DEFAULT 0,
    is_active INTEGER DEFAULT 1,
    created_at TEXT DEFAULT (datetime('now')),
    updated_at TEXT DEFAULT (datetime('now')),
    UNIQUE(entity_id, function_code),
    FOREIGN KEY(entity_id) REFERENCES entity_definition(id) ON DELETE CASCADE
);

-- =================================================
-- 4. Entity Function Handler
-- =================================================
CREATE TABLE entity_function_handler (
    id TEXT PRIMARY KEY,                      -- UUID
    function_id TEXT NOT NULL,                -- References entity_function(id)
    handler_type TEXT,                        -- 'sql', 'api', 'script'
    handler_reference TEXT,                   -- Stored proc name, API URL, or file path
    is_active INTEGER DEFAULT 1,
    created_at TEXT DEFAULT (datetime('now')),
    FOREIGN KEY(function_id) REFERENCES entity_function(id) ON DELETE CASCADE
);

-- =================================================
-- 5. Entity Relationship (Optional)
-- =================================================
CREATE TABLE entity_relationship (
    id TEXT PRIMARY KEY,
    from_entity_id TEXT NOT NULL,
    to_entity_id TEXT NOT NULL,
    relation_type TEXT,                        -- OneToOne / OneToMany / ManyToMany
    relation_name TEXT,
    fk_field TEXT,                             -- e.g., "customer_id"
    description TEXT,
    created_at TEXT DEFAULT (datetime('now')),
    FOREIGN KEY(from_entity_id) REFERENCES entity_definition(id),
    FOREIGN KEY(to_entity_id) REFERENCES entity_definition(id)
);

-- =================================================
-- 6. Entity Validation Rule (Optional)
-- =================================================
CREATE TABLE entity_validation_rule (
    id TEXT PRIMARY KEY,
    entity_id TEXT NOT NULL,
    attribute_id TEXT NOT NULL,
    rule_name TEXT,
    rule_expression TEXT,                      -- e.g., "amount > 0" or JSON logic
    error_message TEXT,
    severity TEXT,                             -- "warning" / "error"
    created_at TEXT DEFAULT (datetime('now')),
    FOREIGN KEY(entity_id) REFERENCES entity_definition(id),
    FOREIGN KEY(attribute_id) REFERENCES entity_attribute(id)
);

-- =================================================
-- Notes:
-- 1. UUIDs are generated in PHP (e.g., using ramsey/uuid or uniqid()).
-- 2. Boolean fields are stored as INTEGER (0=false, 1=true).
-- 3. Timestamps are stored as TEXT using datetime('now').
-- 4. JSON strings can be used for enum_values, parameters, options.
-- 5. scope in entity_definition determines whether the entity is common, person-specific, or organization-specific.
-- =================================================
